{"version":3,"sources":["minio.js"],"names":[],"mappings":"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","file":"minio.js","sourcesContent":["/*\n * Minio Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 Minio, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrequire('source-map-support').install()\n\nimport Crypto from 'crypto';\nimport Http from 'http';\nimport Https from 'https';\nimport Stream from 'stream';\nimport Through2 from 'through2';\nimport BlockStream2 from 'block-stream2';\nimport Url from 'url';\nimport Xml from 'xml';\nimport Moment from 'moment';\nimport async from 'async';\n\nimport { validateBucketName, getRegion, getScope, uriEscape, uriResourceEscape, pipesetup } from './helpers.js';\nimport Multipart from './multipart.js';\nimport { signV4, presignSignatureV4, postPresignSignatureV4 } from './signing.js';\n\nimport * as transformers from './transformers'\n\nimport errors from './errors.js';\n\nvar Package = require('../../package.json');\n\nexport default class Client extends Multipart {\n  constructor(params, transport) {\n    var namespace = 'Minio'\n    var parsedUrl = Url.parse(params.url),\n      port = +parsedUrl.port\n\n    var host = parsedUrl.hostname\n    var protocol = ''\n\n    if (!transport) {\n      switch (parsedUrl.protocol) {\n        case 'http:':\n          {\n            transport = Http\n            protocol = 'http:'\n            if (port === 0) {\n              port = 80\n            }\n            break\n          }\n        case 'https:':\n          {\n            transport = Https\n            protocol = 'https:'\n            if (port === 0) {\n              port = 443\n            }\n            break\n          }\n        default:\n          {\n            throw new errors.InvalidProtocolException('Unknown protocol: ' + parsedUrl.protocol)\n          }\n      }\n    }\n    var newParams = {\n      host: host,\n      port: port,\n      protocol: protocol,\n      accessKey: params.accessKey,\n      secretKey: params.secretKey,\n      userAgent: `minio-js/${Package.version} (${process.platform}; ${process.arch})`,\n      userAgentSet: false\n    }\n    super(newParams, transport)\n    this.params = newParams\n    this.transport = transport\n  }\n\n  // CLIENT LEVEL CALLS\n\n  setUserAgent(name, version, comments) {\n    var formattedComments = ''\n    if (comments && comments.length > 0) {\n      var joinedComments = comments.join('; ')\n      formattedComments = ` (${joinedComments})`\n    }\n    if (this.params.userAgentSet) {\n      throw new errors.InternalClientException('user agent already set')\n    }\n    if (name && version) {\n      this.params.userAgent = `${this.params.userAgent} ${name}/${version}${formattedComments}`\n      this.params.userAgentSet = true\n    } else {\n      throw new errors.InvalidUserAgentException('Invalid user agent')\n    }\n  }\n\n  // SERVICE LEVEL CALLS\n\n  bucketRequest(method, bucket, cb) {\n    var path = `/${bucket}`\n    this.request(method, path, cb)\n  }\n\n  objectRequest(method, bucket, object, cb) {\n    var path = `/${bucket}/${uriResourceEscape(object)}`\n    this.request(method, path, cb)\n  }\n\n  request(method, path, cb) {\n    var requestParams = {\n      host: this.params.host,\n      port: this.params.port,\n      protocol: this.params.protocol,\n      method: method,\n      path: path\n    }\n\n    signV4(requestParams, '', this.params.accessKey, this.params.secretKey)\n\n    var req = this.transport.request(requestParams, response => {\n      if (response.statusCode >= 300) {\n        var concater = transformers.getConcater()\n        var errorTransformer = transformers.getErrorTransformer(response)\n        pipesetup(response, concater, errorTransformer)\n          .on('error', e => cb(e))\n        return\n      }\n      // no data expected\n      cb()\n    })\n    req.on('error', e => cb(e))\n    req.end()\n  }\n\n  // Creates the bucket `bucketName`.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ - Name of the bucket\n  // * `callback(err)` _function_ - callback function with `err` as the error argument. `err` is null if the bucket is successfully created.\n  makeBucket(bucket, cb) {\n    return this.makeBucketWithACL(bucket, 'private', cb)\n  }\n\n  makeBucketWithACL(bucket, acl, cb) {\n    if (!validateBucketName(bucket)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucket)\n    }\n\n    var region = getRegion(this.params.host)\n    if (region === 'us-east-1') {\n      region = null\n    }\n    var payload = ''\n    if (region) {\n      var createBucketConfiguration = []\n      createBucketConfiguration.push({\n        _attr: {\n          xmlns: 'http://s3.amazonaws.com/doc/2006-03-01/'\n        }\n      })\n      createBucketConfiguration.push({\n        LocationConstraint: region\n      })\n      var payloadObject = {\n        CreateBucketConfiguration: createBucketConfiguration\n      }\n      payload = Xml(payloadObject)\n    }\n\n    var hash = Crypto.createHash('sha256')\n    hash.update(payload)\n    var sha256 = hash.digest('hex').toLowerCase(),\n      requestParams = {\n        host: this.params.host,\n        port: this.params.port,\n        protocol: this.params.protocol,\n        method: 'PUT',\n        path: `/${bucket}`,\n        headers: {\n          'Content-Length': payload.length,\n          'x-amz-acl': acl\n        }\n      }\n\n    signV4(requestParams, sha256, this.params.accessKey, this.params.secretKey)\n\n    var req = this.transport.request(requestParams, response => {\n      if (response.statusCode !== 200) {\n        var errorTransformer = transformers.getErrorTransformer(response, true)\n        var concater = transformers.getConcater()\n        pipesetup(response, concater, errorTransformer)\n          .on('error', e => cb(e))\n        return\n      }\n      cb()\n    })\n    req.write(payload)\n    req.end()\n  }\n\n  // List of buckets created.\n  //\n  // __Arguments__\n  // * `callback(err, bucketStream)` _function_ - callback function with error as the first argument. `bucketStream` is the stream emitting bucket information.\n  //\n  // `bucketStream` emits Object with the format:\n  // * `obj.name` _string_ : bucket name\n  // * `obj.creationDate` _string_: date when bucket was created\n  listBuckets(cb) {\n    var requestParams = {\n      host: this.params.host,\n      port: this.params.port,\n      protocol: this.params.protocol,\n      path: '/',\n      method: 'GET'\n    }\n\n    signV4(requestParams, '', this.params.accessKey, this.params.secretKey)\n\n    var concater = transformers.getConcater()\n\n    var req = this.transport.request(requestParams, (response) => {\n      if (response.statusCode !== 200) {\n        var errorTransformer = transformers.getErrorTransformer(response, true)\n        pipesetup(response, concater,  errorTransformer)\n          .on('error', e => cb(e))\n        return\n      }\n      var transformer = transformers.getListBucketTransformer();\n      pipesetup(response, concater, transformer)\n      cb(null, transformer)\n    })\n    req.on('error', e => cb(e))\n    req.end()\n  }\n\n  // Returns a stream that emits objects that are partially uploaded.\n  //\n  // __Arguments__\n  // * `bucketname` _string_: name of the bucket\n  // * `prefix` _string_: prefix of the object names that are partially uploaded\n  // * `recursive` bool: directory style listing when false, recursive listing when true\n  //\n  // __Return Value__\n  // * `stream` _Stream_ : emits objects of the format:\n  //   * `object.key` _string_: name of the object\n  //   * `object.uploadId` _string_: upload ID of the object\n  //   * `object.size` _Integer_: size of the partially uploaded object\n  listIncompleteUploads(bucket, prefix, recursive) {\n    if (!validateBucketName(bucket)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucket)\n    }\n    var delimiter = recursive ? null : \"/\"\n    var dummyTransformer = transformers.getDummyTransformer()\n    var self = this\n    function listNext(keyMarker, uploadIdMarker) {\n      self.listIncompleteUploadsOnce(bucket, prefix, keyMarker, uploadIdMarker, delimiter)\n        .on('error', e => dummyTransformer.emit('error', e))\n        .on('data', result => {\n          result.prefixes.forEach(prefix => dummyTransformer.write(prefix))\n          async.eachSeries(result.uploads, (upload, cb) => {\n            self.listAllParts(bucket, upload.key, upload.uploadId, (err, parts) => {\n              if (err) return cb(err)\n              upload.size = parts.reduce((acc, item) => acc + item.size, 0)\n              dummyTransformer.write(upload)\n              cb()\n            })\n          }, err => {\n            if (err) {\n              dummyTransformer.emit('error', e)\n              dummyTransformer.end()\n              return\n            }\n            if (result.isTruncated) {\n              listNext(result.nextKeyMarker, result.nextUploadIdMarker)\n              return\n            }\n            dummyTransformer.end() // signal 'end'\n          })\n        })\n    }\n    listNext()\n    return dummyTransformer\n  }\n\n  // To check if a bucket already exists.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err)` _function_ : `err` is `null` if the bucket exists\n  bucketExists(bucket, cb) {\n    if (!validateBucketName(bucket)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucket)\n    }\n    this.bucketRequest('HEAD', bucket, cb)\n  }\n\n  // Remove a bucket.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err)` _function_ : `err` is `null` if the bucket is removed successfully.\n  removeBucket(bucket, cb) {\n    if (!validateBucketName(bucket)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucket)\n    }\n    this.bucketRequest('DELETE', bucket, cb)\n  }\n\n  // get a bucket's ACL.\n  //\n  // __Arguments__\n  // * `bucketName` _string_ : name of the bucket\n  // * `callback(err, acl)` _function_ : `err` is not `null` in case of error. `acl` _string_ is the cannedACL which can have the values _private_, _public-read_, _public-read-write_.\n  getBucketACL(bucket, cb) {\n    if (!validateBucketName(bucket)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucket)\n    }\n\n    var query = `?acl`,\n      requestParams = {\n        host: this.params.host,\n        port: this.params.port,\n        protocol: this.params.protocol,\n        method: 'GET',\n        path: `/${bucket}${query}`\n      }\n\n    signV4(requestParams, '', this.params.accessKey, this.params.secretKey)\n    var req = this.transport.request(requestParams, response => {\n      var concater = transformers.getConcater()\n      var errorTransformer = transformers.getErrorTransformer(response)\n      var transformer = transformers.getAclTransformer()\n      if (response.statusCode !== 200) {\n        pipesetup(response, concater, errorTransformer)\n          .on('error', e => cb(e))\n        return\n      }\n      pipesetup(response, concater, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => {\n          var perm = data.acl.reduce(function(acc, grant) {\n            if (grant.grantee.uri === 'http://acs.amazonaws.com/groups/global/AllUsers') {\n              if (grant.permission === 'READ') {\n                acc.publicRead = true\n              } else if (grant.permission === 'WRITE') {\n                acc.publicWrite = true\n              }\n            } else if (grant.grantee.uri === 'http://acs.amazonaws.com/groups/global/AuthenticatedUsers') {\n              if (grant.permission === 'READ') {\n                acc.authenticatedRead = true\n              } else if (grant.permission === 'WRITE') {\n                acc.authenticatedWrite = true\n              }\n            }\n            return acc\n          }, {})\n          var cannedACL = 'unsupported-acl'\n          if (perm.publicRead && perm.publicWrite && !perm.authenticatedRead && !perm.authenticatedWrite) {\n            cannedACL = 'public-read-write'\n          } else if (perm.publicRead && !perm.publicWrite && !perm.authenticatedRead && !perm.authenticatedWrite) {\n            cannedACL = 'public-read'\n          } else if (!perm.publicRead && !perm.publicWrite && perm.authenticatedRead && !perm.authenticatedWrite) {\n            cannedACL = 'authenticated-read'\n          } else if (!perm.publicRead && !perm.publicWrite && !perm.authenticatedRead && !perm.authenticatedWrite) {\n            cannedACL = 'private'\n          }\n          cb(null, cannedACL)\n        })\n    })\n    req.on('error', e => cb(e))\n    req.end()\n  }\n\n  // set a bucket's ACL.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `acl` _string_: acl can be _private_, _public-read_, _public-read-write_\n  // * `callback(err)` _function_: callback is called with error or `null`\n  setBucketACL(bucket, acl, cb) {\n    if (!validateBucketName(bucket)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucket)\n    }\n\n    if (acl === null || acl.trim() === '') {\n      throw new errors.InvalidEmptyACLException('Acl name cannot be empty')\n    }\n\n    // we should make sure to set this query parameter, but on the other hand\n    // the call apparently succeeds without it to s3.  For clarity lets do it anyways\n    var query = `?acl`,\n      requestParams = {\n        host: this.params.host,\n        port: this.params.port,\n        protocol: this.params.protocol,\n        method: 'PUT',\n        path: `/${bucket}${query}`,\n        headers: {\n          'x-amz-acl': acl\n        }\n      }\n\n    signV4(requestParams, '', this.params.accessKey, this.params.secretKey)\n\n    var req = this.transport.request(requestParams, response => {\n      var concater = transformers.getConcater()\n      var errorTransformer = transformers.getErrorTransformer(response)\n      if (response.statusCode !== 200) {\n        pipesetup(response, concater, errorTransformer)\n          .on('error', e => cb(e))\n        return\n      }\n      cb()\n    })\n    // FIXME: the below line causes weird failure in 'gulp test'\n    // req.on('error', e => cb(e))\n    req.end()\n  }\n\n  // Remove the partially uploaded object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `callback(err)` _function_: callback function is called with non `null` value in case of error\n  removeIncompleteUpload(bucketName, objectName, cb) {\n    if (!validateBucketName(bucketName)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucket)\n    }\n\n    if (objectName === null || objectName.trim() === '') {\n      throw new errors.InvalidObjectNameException('Object name cannot be empty')\n    }\n\n    var self = this\n    this.findUploadId(bucketName, objectName, (err, uploadId) => {\n      if (err || !uploadId) {\n        return cb(err)\n      }\n      var requestParams = {\n        host: self.params.host,\n        port: self.params.port,\n        protocol: self.params.protocol,\n        path: `/${bucketName}/${objectName}?uploadId=${uploadId}`,\n        method: 'DELETE'\n      }\n\n      signV4(requestParams, '', self.params.accessKey, self.params.secretKey)\n\n      var req = self.transport.request(requestParams, (response) => {\n        if (response.statusCode !== 204) {\n          var concater = transformers.getConcater()\n          var errorTransformer = transformers.getErrorTransformer(response)\n          pipesetup(response, concater, errorTransformer)\n            .on('error', e => cb(e))\n          return\n        }\n        cb()\n      })\n      req.on('error', e => cb(e))\n      req.end()\n    })\n  }\n\n  // Callback is called with readable stream of the object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getObject(bucketName, objectName, cb) {\n    if (!validateBucketName(bucketName)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucketName)\n    }\n\n    if (objectName === null || objectName.trim() === '') {\n      throw new errors.InvalidObjectNameException('Object name cannot be empty')\n    }\n    this.getPartialObject(bucketName, objectName, 0, 0, cb)\n  }\n\n  // Callback is called with readable stream of the partial object content.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `offset` _number_: offset of the object from where the stream will start\n  // * `length` _number_: length of the object that will be read in the stream\n  // * `callback(err, stream)` _function_: callback is called with `err` in case of error. `stream` is the object content stream\n  getPartialObject(bucketName, objectName, offset, length, cb) {\n    if (!validateBucketName(bucketName)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucketName)\n    }\n\n    if (objectName === null || objectName.trim() === '') {\n      throw new errors.InvalidObjectNameException('Object name cannot be empty')\n    }\n\n    var range = ''\n    if (offset || length) {\n      if (offset) {\n        range = `bytes=${+offset}-`\n      } else {\n        range = 'bytes=0-'\n        offset = 0\n      }\n      if (length) {\n        range += `${(+length + offset) - 1}`\n      }\n    }\n\n    var headers = {}\n    if (range !== '') {\n      headers.Range = range\n    }\n\n    var requestParams = {\n      host: this.params.host,\n      port: this.params.port,\n      protocol: this.params.protocol,\n      path: `/${bucketName}/${uriResourceEscape(objectName)}`,\n      method: 'GET',\n      headers\n    }\n\n    signV4(requestParams, '', this.params.accessKey, this.params.secretKey)\n\n    var req = this.transport.request(requestParams, (response) => {\n      if (!(response.statusCode === 200 || response.statusCode === 206)) {\n        var concater = transformers.getConcater()\n        var errorTransformer = transformers.getErrorTransformer(response)\n        pipesetup(response, concater, errorTransformer)\n          .on('error', e => cb(e))\n        return\n      }\n      var dummyTransformer = transformers.getDummyTransformer()\n      pipesetup(response, dummyTransformer)\n      cb(null, dummyTransformer)\n      return\n    })\n    req.on('error', e => cb(e))\n    req.end()\n  }\n\n  // Uploads the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `contentType` _string_: content type of the object\n  // * `size` _number_: size of the object\n  // * `stream` _Stream_: Readable stream\n  // * `callback(err, etag)` _function_: non null `err` indicates error, `etag` _string_ is the etag of the object uploaded.\n  putObject(bucketName, objectName, contentType, size, r, cb) {\n    if (!validateBucketName(bucketName)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucketName)\n    }\n\n    if (objectName === null || objectName.trim() === '') {\n      throw new errors.InvalidObjectNameException('Object name cannot be empty')\n    }\n\n    if (contentType === null || contentType.trim() === '') {\n      contentType = 'application/octet-stream'\n    }\n\n    function calculatePartSize(size) {\n      var minimumPartSize = 5 * 1024 * 1024, // 5MB\n        maximumPartSize = 5 * 1025 * 1024 * 1024,\n        // using 10000 may cause part size to become too small, and not fit the entire object in\n        partSize = Math.floor(size / 9999)\n\n      if (partSize > maximumPartSize) {\n        return maximumPartSize\n      }\n      return Math.max(minimumPartSize, partSize)\n    }\n\n    var self = this\n    if (size <= 5*1024*1024) {\n      var concater = transformers.getConcater()\n      pipesetup(r, concater)\n        .on('error', e => cb(e))\n        .on('data', chunk => self.doPutObject(bucketName, objectName, contentType, null, null, chunk, cb))\n      return\n    }\n    async.waterfall([\n      function(cb) {\n        self.findUploadId(bucketName, objectName, cb)\n      },\n      function(uploadId, cb) {\n        if (uploadId) {\n          self.listAllParts(bucketName, objectName, uploadId,  (e, etags) => {\n            return cb(e, uploadId, etags)\n          })\n          return\n        }\n        self.initiateNewMultipartUpload(bucketName, objectName, contentType, (e, uploadId) => {\n          return cb(e, uploadId, [])\n        })\n      },\n      function(uploadId, etags, cb) {\n        var partSize = calculatePartSize(size)\n        var sizeVerifier = transformers.getSizeVerifierTransformer(size)\n        var chunker = BlockStream2({size: partSize, zeroPadding: false})\n        var chunkUploader = self.chunkUploader(bucketName, objectName, contentType, uploadId, etags)\n        pipesetup(r, chunker, sizeVerifier, chunkUploader)\n          .on('error', e => cb(e))\n          .on('data', etags => cb(null, etags, uploadId))\n      },\n      function(etags, uploadId, cb) {\n        self.completeMultipartUpload(bucketName, objectName, uploadId, etags, cb)\n      }\n    ], function(err, etag) {\n      if (err) {\n        return cb(err)\n      }\n      cb(null, etag)\n    })\n  }\n\n  listObjectsOnce(bucket, prefix, marker, delimiter, maxKeys) {\n    var queries = []\n      // escape every value in query string, except maxKeys\n    if (prefix) {\n      prefix = uriEscape(prefix)\n      queries.push(`prefix=${prefix}`)\n    }\n    if (marker) {\n      marker = uriEscape(marker)\n      queries.push(`marker=${marker}`)\n    }\n    if (delimiter) {\n      delimiter = uriEscape(delimiter)\n      queries.push(`delimiter=${delimiter}`)\n    }\n    // no need to escape maxKeys\n    if (maxKeys) {\n      if (maxKeys >= 1000) {\n        maxKeys = 1000\n      }\n      queries.push(`max-keys=${maxKeys}`)\n    }\n    queries.sort()\n    var query = ''\n    if (queries.length > 0) {\n      query = `?${queries.join('&')}`\n    }\n    var requestParams = {\n      host: this.params.host,\n      port: this.params.port,\n      protocol: this.params.protocol,\n      path: `/${bucket}${query}`,\n      method: 'GET'\n    }\n\n    var dummyTransformer = transformers.getDummyTransformer()\n    signV4(requestParams, '', this.params.accessKey, this.params.secretKey)\n\n    var req = this.transport.request(requestParams, (response) => {\n      var errorTransformer = transformers.getErrorTransformer(response)\n      var concater = transformers.getConcater()\n      var transformer = transformers.getListObjectsTransformer()\n      if (response.statusCode !== 200) {\n        pipesetup(response, concater, errorTransformer, dummyTransformer)\n        return\n      }\n      pipesetup(response, concater, transformer, dummyTransformer)\n    })\n    req.end()\n    return dummyTransformer\n  }\n\n  // List the objects in the bucket.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `prefix` _string_: the prefix of the objects that should be listed\n  // * `recursive` _bool_: `true` indicates recursive style listing and `false` indicates directory style listing delimited by '/'.\n  //\n  // __Return Value__\n  // * `stream` _Stream_: stream emitting the objects in the bucket, the object is of the format:\n  //   * `stat.key` _string_: name of the object\n  //   * `stat.size` _number_: size of the object\n  //   * `stat.etag` _string_: etag of the object\n  //   * `stat.lastModified` _string_: modified time stamp\n  listObjects(bucketName, prefix, recursive) {\n    if (!validateBucketName(bucketName)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucketName)\n    }\n    // recursive is null set delimiter to '/'.\n    var delimiter = recursive ? null : \"/\"\n    var dummyTransformer = transformers.getDummyTransformer()\n    var self = this\n    function listNext(marker) {\n      self.listObjectsOnce(bucketName, prefix, marker, delimiter, 1000)\n        .on('error', e => dummyTransformer.emit('error', e))\n        .on('data', result => {\n          result.objects.forEach(object => {\n            dummyTransformer.push(object)\n          })\n          if (result.isTruncated) {\n            listNext(result.nextMarker)\n            return\n          }\n          dummyTransformer.push(null) // signal 'end'\n        })\n    }\n    listNext()\n    return dummyTransformer\n  }\n\n  // Stat information of the object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `callback(err, stat)` _function_: `err` is not `null` in case of error, `stat` contains the object information:\n  //   * `stat.size` _number_: size of the object\n  //   * `stat.etag` _string_: etag of the object\n  //   * `stat.contentType` _string_: Content-Type of the object\n  //   * `stat.lastModified` _string_: modified time stamp\n  statObject(bucketName, objectName, cb) {\n    if (!validateBucketName(bucketName)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucketName)\n    }\n\n    if (objectName === null || objectName.trim() === '') {\n      throw new errors.InvalidObjectNameException('Object name cannot be empty')\n    }\n\n    var requestParams = {\n      host: this.params.host,\n      port: this.params.port,\n      protocol: this.params.protocol,\n      path: `/${bucketName}/${uriResourceEscape(objectName)}`,\n      method: 'HEAD'\n    }\n\n    signV4(requestParams, '', this.params.accessKey, this.params.secretKey)\n\n    var req = this.transport.request(requestParams, (response) => {\n      var errorTransformer = transformers.getErrorTransformer(response)\n      var concater = transformers.getConcater()\n      if (response.statusCode !== 200) {\n        pipesetup(response, concater, errorTransformer)\n          .on('error', e => cb(e))\n          return\n      }\n      var result = {\n        size: +response.headers['content-length'],\n        etag: response.headers.etag.replace(/\"/g, ''),\n        contentType: response.headers['content-type'],\n        lastModified: response.headers['last-modified']\n      }\n      cb(null, result)\n    })\n    req.end()\n  }\n\n  // Remove the specified object.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `callback(err)` _function_: callback function is called with non `null` value in case of error\n  removeObject(bucketName, objectName, cb) {\n    if (!validateBucketName(bucketName)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucketName)\n    }\n\n    if (objectName === null || objectName.trim() === '') {\n      throw new errors.InvalidObjectNameException('Object name cannot be empty')\n    }\n    this.objectRequest('DELETE', bucketName, objectName, cb)\n  }\n\n  // Generate a presigned URL for PUT. Using this URL, the browser can upload to S3 only with the specified object name.\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds\n  presignedPutObject(bucketName, objectName, expires) {\n    if (!validateBucketName(bucketName)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucketName)\n    }\n    if (objectName === null || objectName.trim() === '') {\n      throw new errors.InvalidObjectNameException('Object name cannot be empty')\n    }\n    var requestParams = {\n      host: this.params.host,\n      port: this.params.port,\n      protocol: this.params.protocol,\n      path: `/${bucketName}/${uriResourceEscape(objectName)}`,\n      method: 'PUT',\n      expires: expires\n    }\n    return presignSignatureV4(requestParams, this.params.accessKey, this.params.secretKey)\n  }\n\n  // Generate a presigned URL for GET\n  //\n  // __Arguments__\n  // * `bucketName` _string_: name of the bucket\n  // * `objectName` _string_: name of the object\n  // * `expiry` _number_: expiry in seconds\n  presignedGetObject(bucketName, objectName, expires) {\n    if (!validateBucketName(bucketName)) {\n      throw new errors.InvalidateBucketNameException('Invalid bucket name: ' + bucketName)\n    }\n    if (objectName === null || objectName.trim() === '') {\n      throw new errors.InvalidObjectNameException('Object name cannot be empty')\n    }\n    var requestParams = {\n      host: this.params.host,\n      port: this.params.port,\n      protocol: this.params.protocol,\n      path: `/${bucketName}/${uriResourceEscape(objectName)}`,\n      method: 'GET',\n      expires: expires\n    }\n    return presignSignatureV4(requestParams, this.params.accessKey, this.params.secretKey)\n  }\n\n  // return PostPolicy object\n  newPostPolicy() {\n    return new PostPolicy()\n  }\n\n  // presignedPostPolicy can be used in situations where we want more control on the upload than what\n  // presignedPutObject() provides. i.e Using presignedPostPolicy we will be able to put policy restrictions\n  // on the object's `name` `bucket` `expiry` `Content-Type`\n  presignedPostPolicy(postPolicy) {\n    var date = Moment.utc()\n    var region = getRegion(this.params.host)\n    var dateStr = date.format('YYYYMMDDTHHmmss') + 'Z'\n\n    postPolicy.policy.conditions.push(['eq', '$x-amz-date', dateStr])\n    postPolicy.formData['x-amz-date'] = dateStr\n\n    postPolicy.policy.conditions.push(['eq', '$x-amz-algorithm', 'AWS4-HMAC-SHA256'])\n    postPolicy.formData['x-amz-algorithm'] = 'AWS4-HMAC-SHA256'\n\n    postPolicy.policy.conditions.push([\"eq\", \"$x-amz-credential\", this.params.accessKey + \"/\" + getScope(region, date)])\n    postPolicy.formData['x-amz-credential'] = this.params.accessKey + \"/\" + getScope(region, date)\n\n    var policyBase64 = new Buffer(JSON.stringify(postPolicy.policy)).toString('base64')\n\n    postPolicy.formData.policy = policyBase64\n\n    var signature = postPresignSignatureV4(region, date, this.params.secretKey, policyBase64)\n\n    postPolicy.formData['x-amz-signature'] = signature\n\n    return postPolicy.formData\n  }\n}\n\n// Build PostPolicy object that can be signed by presignedPostPolicy\nclass PostPolicy {\n  constructor() {\n    this.policy = {\n      conditions: []\n    }\n    this.formData = {}\n  }\n\n  // set expiration date\n  setExpires(nativedate) {\n    var date = Moment(nativedate)\n    if (!date) {\n      throw new errors(\"date can not be null\")\n    }\n\n    function getExpirationString(date) {\n      return date.format('YYYY-MM-DDThh:mm:ss.SSS') + 'Z'\n    }\n    this.policy.expiration = getExpirationString(date)\n  }\n\n  // set object name\n  setKey(key) {\n    if (!key) {\n      throw new errors(\"key can not be null\")\n    }\n    this.policy.conditions.push([\"eq\", \"$key\", key])\n    this.formData.key = key\n  }\n\n  // set object name prefix, i.e policy allows any keys with this prefix\n  setKeyStartsWith(prefix) {\n    if (!prefix) {\n      throw new errors(\"key prefix can not be null\")\n    }\n    this.policy.conditions.push([\"starts-with\", \"$key\", keyStartsWith])\n    this.formData.key = key\n  }\n\n  // set bucket name\n  setBucket(bucket) {\n    if (!bucket) {\n      throw new errors(\"bucket can not be null\")\n    }\n    this.policy.conditions.push([\"eq\", \"$bucket\", bucket])\n    this.formData.bucket = bucket\n  }\n\n  // set Content-Type\n  setContentType(type) {\n    if (!type) {\n      throw new errors(\"content-type can not be null\")\n    }\n    this.policy.conditions.push([\"eq\", \"$Content-Type\", type])\n    this.formData[\"Content-Type\"] = type\n  }\n}\n"],"sourceRoot":"/source/"}