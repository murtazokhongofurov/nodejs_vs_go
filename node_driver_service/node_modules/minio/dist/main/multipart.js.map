{"version":3,"sources":["multipart.js"],"names":[],"mappings":"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","file":"multipart.js","sourcesContent":["/*\n * Minio Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 Minio, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Crypto from 'crypto';\nimport Concat from 'concat-stream';\nimport Stream from 'stream';\nimport Xml from 'xml';\nimport Through2 from 'through2';\n\nimport { uriEscape, uriResourceEscape, pipesetup } from './helpers.js';\nimport { signV4 } from './signing.js';\nimport * as transformers from './transformers.js'\nimport * as xmlParsers from './xml-parsers.js'\n\nexport default class Multipart {\n  constructor(params, transport) {\n    this.params = params\n    this.transport = transport\n  }\n\n  initiateNewMultipartUpload(bucket, key, contentType, cb) {\n    var requestParams = {\n      host: this.params.host,\n      port: this.params.port,\n      protocol: this.params.protocol,\n      path: `/${bucket}/${uriResourceEscape(key)}?uploads`,\n      method: 'POST',\n      headers: {\n        'Content-Type': contentType\n      }\n    }\n\n    signV4(requestParams, '', this.params.accessKey, this.params.secretKey)\n\n    var concater = transformers.getConcater()\n    var transformer = transformers.getInitiateMultipartTransformer()\n    var request = this.transport.request(requestParams, (response) => {\n      if (response.statusCode !== 200) {\n        var errorTransformer = transformers.getErrorTransformer(response)\n        pipesetup(response, concater, errorTransformer)\n          .on('error', e => cb(e))\n        return\n      }\n      pipesetup(response, concater, transformer)\n        .on('error', e => cb(e))\n        .on('data', uploadId => cb(null, uploadId))\n    })\n    request.end()\n  }\n\n  completeMultipartUpload(bucket, key, uploadId, etags, cb) {\n    var requestParams = {\n      host: this.params.host,\n      port: this.params.port,\n      protocol: this.params.protocol,\n      path: `/${bucket}/${uriResourceEscape(key)}?uploadId=${uploadId}`,\n      method: 'POST'\n    }\n    var parts = []\n\n    etags.forEach(element => {\n      parts.push({\n        Part: [{\n          PartNumber: element.part\n        }, {\n          ETag: element.etag\n        }]\n      })\n    })\n\n    var payloadObject = {\n        CompleteMultipartUpload: parts\n      },\n      payload = Xml(payloadObject),\n      hash = Crypto.createHash('sha256')\n\n    hash.update(payload)\n\n    var sha256 = hash.digest('hex').toLowerCase()\n\n    signV4(requestParams, sha256, this.params.accessKey, this.params.secretKey)\n\n    var concater = transformers.getConcater()\n    var transformer = transformers.getCompleteMultipartTransformer()\n\n    var request = this.transport.request(requestParams, (response) => {\n      if (response.statusCode !== 200) {\n        var errorTransformer = transformers.getErrorTransformer(response)\n        pipesetup(response, concater, errorTransformer)\n          .on('error', e => cb(e))\n        return\n      }\n      pipesetup(response, concater, transformer)\n        .on('error', e => cb(e))\n        .on('data', result => cb(null, result.etag))\n    })\n    request.write(payload)\n    request.end()\n  }\n\n  listAllParts(bucket, key, uploadId, cb) {\n    var parts = []\n    var self = this\n    function listNext(marker) {\n      self.listParts(bucket, key, uploadId, marker, (e, result) => {\n        if (e) {\n          cb(e)\n          return\n        }\n        parts = parts.concat(result.parts)\n        if (result.isTruncated) {\n          listNext(result.marker)\n          return\n        }\n        cb(null, parts)\n      })\n    }\n    listNext(0)\n  }\n\n  listParts(bucket, key, uploadId, marker, cb) {\n    var query = '?'\n    if (marker && marker !== 0) {\n      query += `part-number-marker=${marker}&`\n    }\n    query += `uploadId=${uploadId}`\n    var requestParams = {\n      host: this.params.host,\n      port: this.params.port,\n      protocol: this.params.protocol,\n      path: `/${bucket}/${uriResourceEscape(key)}${query}`,\n      method: 'GET'\n    }\n\n    signV4(requestParams, '', this.params.accessKey, this.params.secretKey)\n    var concater = transformers.getConcater()\n    var transformer = transformers.getListPartsTransformer()\n    var req = this.transport.request(requestParams, (response) => {\n      if (response.statusCode !== 200) {\n        var errorTransformer = transformers.getErrorTransformer(response)\n        pipesetup(response, concater, errorTransformer)\n          .on('error', e => cb(e))\n        return\n      }\n      pipesetup(response, concater, transformer)\n        .on('error', e => cb(e))\n        .on('data', data => cb(null, data))\n    })\n    req.on('error', e => cb(e))\n    req.end()\n  }\n\n  listIncompleteUploadsOnce(bucket, prefix, keyMarker, uploadIdMarker, delimiter) {\n    var queries = []\n    if (prefix) {\n      queries.push(`prefix=${uriEscape(prefix)}`)\n    }\n    if (keyMarker) {\n      keyMarker = uriEscape(keyMarker)\n      queries.push(`key-marker=${keyMarker}`)\n    }\n    if (uploadIdMarker) {\n      queries.push(`upload-id-marker=${uploadIdMarker}`)\n    }\n    if (delimiter) {\n      queries.push(`delimiter=${uriEscape(delimiter)}`)\n    }\n    var maxUploads = 1000\n    queries.push(`max-uploads=${maxUploads}`)\n    queries.sort()\n    queries.unshift('uploads')\n    var query = ''\n    if (queries.length > 0) {\n      query = `?${queries.join('&')}`\n    }\n    var requestParams = {\n      host: this.params.host,\n      port: this.params.port,\n      path: `/${bucket}${query}`,\n      method: 'GET'\n    }\n    signV4(requestParams, '', this.params.accessKey, this.params.secretKey)\n\n    var transformer = transformers.getListMultipartTransformer()\n    var dummyTransformer = transformers.getDummyTransformer()\n    var concater = transformers.getConcater()\n\n    var req = this.transport.request(requestParams, (response) => {\n      if (response.statusCode !== 200) {\n        var errorTransformer = transformers.getErrorTransformer(response)\n        pipesetup(response, concater, errorTransformer, dummyTransformer)\n        return\n      }\n      pipesetup(response, concater, transformer, dummyTransformer)\n    })\n    req.on('error', e => dummyTransformer.emit('error', e))\n    req.end()\n    return dummyTransformer\n  }\n\n  findUploadId(bucket, key, cb) {\n    var self = this\n    function listNext(keyMarker, uploadIdMarker) {\n      self.listIncompleteUploadsOnce(bucket, key, keyMarker, uploadIdMarker)\n        .on('error', e => cb(e))\n        .on('data', result => {\n          var keyFound = false\n          result.uploads.forEach(upload => {\n            if (upload.key === key) {\n              cb(null, upload.uploadId)\n              keyFound = true\n            }\n          })\n          if (keyFound) {\n            return\n          }\n          if (result.isTruncated) {\n            listNext(result.nextKeyMarker, result.nextUploadIdMarker)\n            return\n          }\n          cb(null, undefined)\n        })\n    }\n    listNext()\n  }\n\n  chunkUploader(bucket, key, contentType, uploadId, partsArray) {\n    var partsDone = []\n    var self = this\n    var partNumber = 1\n\n    // convert array to object to make things easy\n    var parts = partsArray.reduce(function(acc, item) {\n      if (!acc[item.part]) {\n        acc[item.part] = item\n      }\n      return acc\n    }, {})\n\n    return Through2.obj(function(chunk, enc, cb) {\n      var part = parts[partNumber]\n      if (part) {\n        var hash = Crypto.createHash('md5')\n        hash.update(chunk)\n        var md5 = hash.digest('hex').toLowerCase()\n        if (md5 === part.etag) {\n          //md5 matches, chunk already uploaded\n          partsDone.push({part: part.part, etag: part.etag})\n          partNumber++\n          return cb()\n        }\n        // md5 doesn't match, upload again\n      }\n      self.doPutObject(bucket, key, contentType, uploadId, partNumber, chunk, (e, etag) => {\n        if (e) {\n          partNumber++\n          return cb(e)\n        }\n        var part = {\n          part: partNumber,\n          etag: etag\n        }\n        partsDone.push(part)\n        partNumber++\n        cb()\n      })\n    }, function(cb) {\n      this.push(partsDone)\n      this.push(null)\n      cb()\n    })\n  }\n\n  doPutObject(bucket, key, contentType, uploadId, part, data, cb) {\n    var query = ''\n    if (part) {\n      query = `?partNumber=${part}&uploadId=${uploadId}`\n    }\n    if (contentType === null || contentType === '') {\n      contentType = 'application/octet-stream'\n    }\n\n    var hash256 = Crypto.createHash('sha256')\n    var hashMD5 = Crypto.createHash('md5')\n\n    hash256.update(data)\n    hashMD5.update(data)\n\n    var sha256 = hash256.digest('hex').toLowerCase(),\n      md5 = hashMD5.digest('base64'),\n      requestParams = {\n        host: this.params.host,\n        port: this.params.port,\n        protocol: this.params.protocol,\n        path: `/${bucket}/${uriResourceEscape(key)}${query}`,\n        method: 'PUT',\n        headers: {\n          'Content-Length': data.length,\n          'Content-Type': contentType,\n          'Content-MD5': md5\n        }\n      }\n\n    signV4(requestParams, sha256, this.params.accessKey, this.params.secretKey)\n    var req = this.transport.request(requestParams, (response) => {\n      if (response.statusCode !== 200) {\n        var concater = transformers.getConcater()\n        var errorTransformer = transformers.getErrorTransformer(response)\n        pipesetup(response, concater, errorTransformer)\n          .on('error', e => cb(e))\n        return\n      }\n      var etag = response.headers.etag\n      if (etag) {\n        etag = etag.replace(/^\\\"/, '').replace(/\\\"$/, '')\n      }\n      cb(null, etag)\n    })\n    req.on('error', e => cb(e))\n    req.write(data)\n    req.end()\n  }\n}\n"],"sourceRoot":"/source/"}