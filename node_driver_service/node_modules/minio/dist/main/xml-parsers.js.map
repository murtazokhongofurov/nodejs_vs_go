{"version":3,"sources":["xml-parsers.js"],"names":[],"mappings":"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","file":"xml-parsers.js","sourcesContent":["/*\n * Minio Javascript Library for Amazon S3 Compatible Cloud Storage, (C) 2015 Minio, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Concat from 'concat-stream';\nimport ParseXml from 'xml-parser';\n\nexport function parseError(xml) {\n  var e = {}\n  var parsedXml = ParseXml(xml)\n  if (typeof parsedXml.root !== 'undefined') {\n    parsedXml.root.children.forEach(element => {\n      if (element.name === 'Code') {\n        e.code = element.content\n      } else if (element.name === 'Message') {\n        e.message = element.content\n      } else if (element.name === 'RequestId') {\n        e.requestid = element.content\n      } else if (element.name === 'Resource') {\n        e.resource = element.content\n      } else if (element.name === 'HostId') {\n        e.hostid = element.content\n      }\n    })\n  }\n  return e\n}\n\nexport function parseListMultipart(xml) {\n  var parsedXml = ParseXml(xml.toString()),\n    result = {\n      uploads: [],\n      prefixes: [],\n      isTruncated: false\n    }\n  parsedXml.root.children.forEach(element => {\n    switch (element.name) {\n      case 'IsTruncated':\n        {\n          result.isTruncated = element.content === 'true'\n          break\n        }\n      case 'NextKeyMarker':\n        {\n          result.nextKeyMarker = element.content\n          break\n        }\n      case 'NextUploadIdMarker':\n        {\n          result.nextUploadIdMarker = element.content\n          break\n        }\n\n      case 'CommonPrefixes':\n        { // todo, this is the only known way for now to propagate delimited entries\n          var prefix = {}\n          element.children.forEach(xmlPrefix => {\n            switch (xmlPrefix.name) {\n              case 'Prefix':\n                {\n                  prefix.prefix = xmlPrefix.content\n                  break\n                }\n            }\n          })\n          result.prefixes.push(prefix)\n          break\n        }\n      case 'Upload':\n        {\n          var upload = {}\n          element.children.forEach(xmlObject => {\n            switch (xmlObject.name) {\n              case 'Key':\n                {\n                  upload.key = xmlObject.content\n                  break\n                }\n              case 'UploadId':\n                {\n                  upload.uploadId = xmlObject.content\n                  break\n                }\n              default:\n            }\n          })\n          result.uploads.push(upload)\n          break\n        }\n      default:\n    }\n  })\n  return result\n}\n\nexport function parseListBucket(xml) {\n  var result = []\n  var parsedXml = ParseXml(xml)\n  parsedXml.root.children.forEach((element) => {\n    if (element.name === 'Buckets') {\n      element.children.forEach(bucketListing => {\n        var bucket = {}\n        bucketListing.children.forEach(prop => {\n          switch (prop.name) {\n            case 'Name':\n              {\n                bucket.name = prop.content\n                break\n              }\n            case 'CreationDate':\n              {\n                bucket.creationDate = prop.content\n                break\n              }\n          }\n        })\n        result.push(bucket)\n      })\n    }\n  })\n  return result\n}\n\nexport function parseAcl(xml) {\n  var parsedXml = ParseXml(xml),\n    publicRead = false,\n    publicWrite = false,\n    authenticatedRead = false,\n    authenticatedWrite = false\n\n  var result = {\n    owner: undefined,\n    acl: []\n  }\n\n  parsedXml.root.children.forEach(element => {\n    switch (element.name) {\n      case 'Owner':\n        {\n          var ownerObj = {}\n          element.children.forEach(element => {\n            switch (element.name) {\n              case 'ID':\n                {\n                  ownerObj.id = element.content\n                  break\n                }\n              case 'DisplayName':\n                {\n                  ownerObj.displayName = element.content\n                  break\n                }\n              default:\n            }\n          })\n          result.owner = ownerObj\n          break\n        }\n      case 'AccessControlList':\n        {\n          element.children.forEach(grant => {\n            var granteeURL = null,\n              permission = null\n            var grantObj = {\n              grantee: undefined,\n              permission: undefined\n            }\n            grant.children.forEach(grantChild => {\n              switch (grantChild.name) {\n                case 'Grantee':\n                  {\n                    var granteeObj = {}\n                    grantChild.children.forEach(grantee => {\n                      switch (grantee.name) {\n                        case 'URI':\n                          {\n                            granteeURL = grantee.content\n                            granteeObj.uri = grantee.content\n                            break\n                          }\n                        case 'ID':\n                          {\n                            granteeObj.id = grantee.content\n                            break\n                          }\n                        case 'DisplayName':\n                          {\n                            granteeObj.displayName = grantee.content\n                            break\n                          }\n                      }\n                    })\n                    grantObj.grantee = granteeObj\n                    break\n                  }\n                case 'Permission':\n                  {\n                    permission = grantChild.content\n                    grantObj.permission = grantChild.content\n                    break\n                  }\n              }\n            })\n            result.acl.push(grantObj)\n          })\n          break\n        }\n    }\n  })\n  return result\n}\n\nexport function parseListParts(xml) {\n  var parsedXml = ParseXml(xml)\n  var result = {\n    isTruncated: false,\n    parts: [],\n    marker: undefined\n  }\n  parsedXml.root.children.forEach(element => {\n    switch (element.name) {\n      case 'IsTruncated':\n        result.isTruncated = element.content === 'true'\n        break\n      case 'NextPartNumberMarker':\n        result.marker = +element.content\n        break\n      case 'Part':\n        var object = {}\n        element.children.forEach(xmlObject => {\n          switch (xmlObject.name) {\n            case 'PartNumber':\n              object.part = +xmlObject.content\n              break\n            case 'LastModified':\n              object.lastModified = xmlObject.content\n              break\n            case 'ETag':\n              object.etag = xmlObject.content.replace(/\"/g, '').replace(/&quot;/g, '').replace(/&#34;/g, '')\n              break\n            case 'Size':\n              object.size = +xmlObject.content\n              break\n            default:\n          }\n        })\n        result.parts.push(object)\n        break\n      default:\n        break\n    }\n  })\n  return result\n}\n\nexport function parseInitiateMultipart(xml) {\n  var parsedXml = ParseXml(xml)\n  var uploadId = null\n  parsedXml.root.children.forEach(element => {\n    if (element.name === 'UploadId') {\n      uploadId = element.content\n    }\n  })\n  return uploadId\n}\n\nexport function parseCompleteMultipart(xml) {\n  var parsedXml = ParseXml(xml)\n  var result = {}\n  parsedXml.root.children.forEach(element => {\n    switch (element.name) {\n      case 'Location':\n        {\n          result.location = element.content\n          break\n        }\n      case 'Key':\n        {\n          result.key = element.content\n          break\n        }\n      case 'Bucket':\n        {\n          result.bucket = element.content\n          break\n        }\n      case 'ETag':\n        {\n          result.etag = element.content.replace(/\"/g, '').replace(/&quot;/g, '').replace(/&#34;/g, '')\n          break\n        }\n      default:\n    }\n  })\n  return result\n}\n\nexport function parseListObjects(xml) {\n  var parsedXml = ParseXml(xml)\n  var result = {\n        objects: [],\n        nextMarker: null,\n        isTruncated: false\n      }\n  var marker\n  parsedXml.root.children.forEach(element => {\n    switch (element.name) {\n      case 'IsTruncated':\n        {\n          result.isTruncated = element.content === 'true'\n          break\n        }\n      case 'NextMarker':\n        {\n          result.nextMarker = element.content\n          break\n        }\n      case 'Contents':\n        {\n          var content = {}\n          element.children.forEach(xmlObject => {\n            switch (xmlObject.name) {\n              case 'Key':\n                {\n                  content.name = xmlObject.content\n                  marker = content.name\n                  break\n                }\n              case 'LastModified':\n                {\n                  content.lastModified = xmlObject.content\n                  break\n                }\n              case 'Size':\n                {\n                  content.size = +xmlObject.content\n                  break\n                }\n              case 'ETag':\n                {\n                  content.etag = xmlObject.content.replace(/\"/g, '').replace(/&quot;/g, '').replace(/&#34;/g, '')\n                  break\n                }\n              default:\n            }\n          })\n          result.objects.push(content)\n          break\n        }\n      case 'CommonPrefixes':\n        { // todo, this is the only known way for now to propagate delimited entries\n          var commonPrefixes = {}\n          element.children.forEach(xmlPrefix => {\n            switch (xmlPrefix.name) {\n              case 'Prefix':\n                {\n                  commonPrefixes.name = xmlPrefix.content\n                  commonPrefixes.size = 0\n                  break\n                }\n              default:\n            }\n          })\n          result.objects.push(commonPrefixes)\n          break\n        }\n      default:\n    }\n  })\n  if (result.isTruncated && !result.nextMarker) {\n    result.nextMarker = marker\n  }\n  return result\n}\n"],"sourceRoot":"/source/"}